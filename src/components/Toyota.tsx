/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Martin Trafas (https://sketchfab.com/Bexxie)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/toyota-ae86-black-limited-kouki-80854ba302034431b517f523db328129
title: Toyota AE86 Black Limited Kouki
*/

import * as THREE from "three";
import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Headlights_Reflector_0: THREE.Mesh;
    Headlights_01_Primary_0: THREE.Mesh;
    Headlights_HeadlightLens_0: THREE.Mesh;
    Headlights_Trim2_0: THREE.Mesh;
    Interior_Seatbelt_0: THREE.Mesh;
    Interior_Interior_0: THREE.Mesh;
    Interior_InteriorPlastic_0: THREE.Mesh;
    Interior_InteriorPlastic2_0: THREE.Mesh;
    SteeringWheel_SteeringWheel_0: THREE.Mesh;
    CarBody_Trueno_0: THREE.Mesh;
    CarBody_01_Primary_0: THREE.Mesh;
    CarBody_02_Secondary_0: THREE.Mesh;
    CarBody_Windows_0: THREE.Mesh;
    CarBody_Shadow_0: THREE.Mesh;
    CarBody_Reflector_0: THREE.Mesh;
    CarBody_Sticker1_0: THREE.Mesh;
    CarBody_Sticker2_0: THREE.Mesh;
    CarBody_Trim1_0: THREE.Mesh;
    CarBody_LampOrange_0: THREE.Mesh;
    CarBody_LampWhite_0: THREE.Mesh;
    CarBody_LampRedLight_0: THREE.Mesh;
    CarBody_LampRed_0: THREE.Mesh;
    CarBody_Mirror_0: THREE.Mesh;
    CarBody_LicensePlate_0: THREE.Mesh;
    CarBody_Trim2_0: THREE.Mesh;
    FL_Caliper_BrakeCaliper_0: THREE.Mesh;
    FL_Wheel_Brake_Disc_0: THREE.Mesh;
    FL_Wheel_TireMaterial_0: THREE.Mesh;
    FL_Wheel_RimMaterial_0: THREE.Mesh;
    FR_Caliper_BrakeCaliper_0: THREE.Mesh;
    FR_Wheel_Brake_Disc_0: THREE.Mesh;
    FR_Wheel_TireMaterial_0: THREE.Mesh;
    FR_Wheel_RimMaterial_0: THREE.Mesh;
    RL_Caliper_BrakeCaliper_0: THREE.Mesh;
    RL_Wheel_Brake_Disc_0: THREE.Mesh;
    RL_Wheel_TireMaterial_0: THREE.Mesh;
    RL_Wheel_RimMaterial_0: THREE.Mesh;
    RR_Caliper_BrakeCaliper_0: THREE.Mesh;
    RR_Wheel_Brake_Disc_0: THREE.Mesh;
    RR_Wheel_TireMaterial_0: THREE.Mesh;
    RR_Wheel_RimMaterial_0: THREE.Mesh;
  };
  materials: {
    Reflector: THREE.MeshStandardMaterial;
    ["01_Primary"]: THREE.MeshPhysicalMaterial;
    HeadlightLens: THREE.MeshPhysicalMaterial;
    Trim2: THREE.MeshStandardMaterial;
    Seatbelt: THREE.MeshStandardMaterial;
    Interior: THREE.MeshStandardMaterial;
    InteriorPlastic: THREE.MeshStandardMaterial;
    InteriorPlastic2: THREE.MeshStandardMaterial;
    SteeringWheel: THREE.MeshStandardMaterial;
    Trueno: THREE.MeshStandardMaterial;
    ["02_Secondary"]: THREE.MeshPhysicalMaterial;
    Windows: THREE.MeshStandardMaterial;
    Shadow: THREE.MeshStandardMaterial;
    Sticker1: THREE.MeshStandardMaterial;
    Sticker2: THREE.MeshStandardMaterial;
    Trim1: THREE.MeshStandardMaterial;
    LampOrange: THREE.MeshPhysicalMaterial;
    LampWhite: THREE.MeshPhysicalMaterial;
    LampRedLight: THREE.MeshPhysicalMaterial;
    LampRed: THREE.MeshPhysicalMaterial;
    Mirror: THREE.MeshStandardMaterial;
    LicensePlate: THREE.MeshStandardMaterial;
    BrakeCaliper: THREE.MeshStandardMaterial;
    Brake_Disc: THREE.MeshStandardMaterial;
    TireMaterial: THREE.MeshStandardMaterial;
    RimMaterial: THREE.MeshStandardMaterial;
  };
};

export const Model = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF("/toyota-transformed.glb") as GLTFResult;
  const wheel1 = useRef<THREE.Group>(null!);
  const wheel2 = useRef<THREE.Group>(null!);
  const wheel3 = useRef<THREE.Group>(null!);
  const wheel4 = useRef<THREE.Group>(null!);
  useFrame(({ clock }) => {
    const a = clock.getElapsedTime() * 3;
    wheel1.current.rotation.x = a;
    wheel2.current.rotation.x = a;
    wheel3.current.rotation.x = a;
    wheel4.current.rotation.x = a;
  })
  
  return (
    <group {...props} dispose={null}>
      <group
        position={[48.35, 77.51, 198.06]}
        rotation={[-2.7, 0, 0]}
        scale={100}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Headlights_Reflector_0.geometry}
          material={materials.Reflector}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Headlights_01_Primary_0.geometry}
          material={materials["01_Primary"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Headlights_HeadlightLens_0.geometry}
          material={materials.HeadlightLens}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Headlights_Trim2_0.geometry}
          material={materials.Trim2}
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Interior_Seatbelt_0.geometry}
          material={materials.Seatbelt}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Interior_Interior_0.geometry}
          material={materials.Interior}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Interior_InteriorPlastic_0.geometry}
          material={materials.InteriorPlastic}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Interior_InteriorPlastic2_0.geometry}
          material={materials.InteriorPlastic2}
        />
      </group>
      <group
        position={[-36.68, 80.8, 49.7]}
        rotation={[-2.82, 0, -Math.PI]}
        scale={2.76}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.SteeringWheel_SteeringWheel_0.geometry}
          material={materials.SteeringWheel}
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_Trueno_0.geometry}
          material={materials.Trueno}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_01_Primary_0.geometry}
          material={materials["01_Primary"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_02_Secondary_0.geometry}
          material={materials["02_Secondary"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_Windows_0.geometry}
          material={materials.Windows}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_Shadow_0.geometry}
          material={materials.Shadow}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_Reflector_0.geometry}
          material={materials.Reflector}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_Sticker1_0.geometry}
          material={materials.Sticker1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_Sticker2_0.geometry}
          material={materials.Sticker2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_Trim1_0.geometry}
          material={materials.Trim1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_LampOrange_0.geometry}
          material={materials.LampOrange}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_LampWhite_0.geometry}
          material={materials.LampWhite}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_LampRedLight_0.geometry}
          material={materials.LampRedLight}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_LampRed_0.geometry}
          material={materials.LampRed}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_Mirror_0.geometry}
          material={materials.Mirror}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_LicensePlate_0.geometry}
          material={materials.LicensePlate}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CarBody_Trim2_0.geometry}
          material={materials.Trim2}
        />
      </group>
      <group
        position={[64.1, 36.03, 141.76]}
        rotation={[0, Math.PI / 2, 0]}
        scale={11.35}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.FL_Caliper_BrakeCaliper_0.geometry}
          material={materials.BrakeCaliper}
        />
      </group>
      <group
        position={[70.95, 36.03, 141.76]}
        rotation={[0, 0, 0]}
        ref={wheel1}
        scale={100}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.FL_Wheel_Brake_Disc_0.geometry}
          material={materials.Brake_Disc}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.FL_Wheel_TireMaterial_0.geometry}
          material={materials.TireMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.FL_Wheel_RimMaterial_0.geometry}
          material={materials.RimMaterial}
        />
      </group>
      <group
        position={[-64.1, 36.03, 141.75]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={[-11.35, 11.35, 11.35]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.FR_Caliper_BrakeCaliper_0.geometry}
          material={materials.BrakeCaliper}
        />
      </group>
      <group
        position={[-70.95, 36.03, 141.76]}
        rotation={[0, 0, 0]}
        ref={wheel2}
        scale={100}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.FR_Wheel_Brake_Disc_0.geometry}
          material={materials.Brake_Disc}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.FR_Wheel_TireMaterial_0.geometry}
          material={materials.TireMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.FR_Wheel_RimMaterial_0.geometry}
          material={materials.RimMaterial}
        />
      </group>
      <group
        position={[64.1, 36.03, -97.15]}
        rotation={[0, Math.PI / 2, 0]}
        scale={11.35}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.RL_Caliper_BrakeCaliper_0.geometry}
          material={materials.BrakeCaliper}
        />
      </group>
      <group
        position={[70.95, 36.03, -97.15]}
        rotation={[0, 0, 0]}
        ref={wheel3}
        scale={100}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.RL_Wheel_Brake_Disc_0.geometry}
          material={materials.Brake_Disc}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.RL_Wheel_TireMaterial_0.geometry}
          material={materials.TireMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.RL_Wheel_RimMaterial_0.geometry}
          material={materials.RimMaterial}
        />
      </group>
      <group
        position={[-64.1, 36.03, -97.15]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={[-11.35, 11.35, 11.35]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.RR_Caliper_BrakeCaliper_0.geometry}
          material={materials.BrakeCaliper}
        />
      </group>
      <group
        position={[-70.95, 36.03, -97.15]}
        rotation={[0, 0, 0]}
        ref={wheel4}
        scale={100}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.RR_Wheel_Brake_Disc_0.geometry}
          material={materials.Brake_Disc}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.RR_Wheel_TireMaterial_0.geometry}
          material={materials.TireMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.RR_Wheel_RimMaterial_0.geometry}
          material={materials.RimMaterial}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/toyota-transformed.glb");
